{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(pnpm add:*)",
      "Bash(/opt/homebrew/bin/gh issue create --title \"開発環境構築\" --body \"$(cat <<'EOF'\n## 概要\nプロジェクトの開発に必要な設定ファイルと開発環境を整備します。\n\n## 背景\nチーム開発を円滑に進めるため、統一された開発環境と設定ファイルが必要です。TypeScript、ESLint、Prettierの設定を最適化し、開発効率を向上させます。\n\n## タスク\n- [ ] TypeScript設定の最適化（tsconfig.json）\n- [ ] ESLint設定の作成・調整\n- [ ] Prettier設定の作成・調整\n- [ ] VSCode推奨設定の作成（.vscode/settings.json）\n- [ ] VSCode推奨拡張機能リストの作成（.vscode/extensions.json）\n- [ ] Git設定ファイルの作成（.gitignore、.gitattributes）\n- [ ] EditorConfig設定の作成\n- [ ] package.jsonのスクリプト整備\n\n## 完了条件\n- [ ] TypeScriptのstrictモードが有効\n- [ ] ESLintが正しく動作する\n- [ ] Prettierによる自動フォーマットが動作する\n- [ ] VSCodeで推奨設定が適用される\n- [ ] Gitで不要なファイルが無視される\n- [ ] `pnpm run lint`でリントが実行される\n- [ ] `pnpm run format`でフォーマットが実行される\n\n## 技術仕様\n- TypeScript（strictモード）\n- ESLint（SvelteKit推奨設定）\n- Prettier（SvelteKit推奨設定）\n- EditorConfig\n\n## 参考資料\n- 設計書：`/doc/designs/phase-1/01_project-initialization.md`\n- 開発プロセス：`/doc/development.md`\nEOF\n)\" --label \"phase:1,type:setup,priority:medium\")",
      "Bash(/opt/homebrew/bin/gh label list)",
      "Bash(/opt/homebrew/bin/gh issue create --title \"開発環境構築\" --body \"$(cat <<'EOF'\n## 概要\nプロジェクトの開発に必要な設定ファイルと開発環境を整備します。\n\n## 背景\nチーム開発を円滑に進めるため、統一された開発環境と設定ファイルが必要です。TypeScript、ESLint、Prettierの設定を最適化し、開発効率を向上させます。\n\n## タスク\n- [ ] TypeScript設定の最適化（tsconfig.json）\n- [ ] ESLint設定の作成・調整\n- [ ] Prettier設定の作成・調整\n- [ ] VSCode推奨設定の作成（.vscode/settings.json）\n- [ ] VSCode推奨拡張機能リストの作成（.vscode/extensions.json）\n- [ ] Git設定ファイルの作成（.gitignore、.gitattributes）\n- [ ] EditorConfig設定の作成\n- [ ] package.jsonのスクリプト整備\n\n## 完了条件\n- [ ] TypeScriptのstrictモードが有効\n- [ ] ESLintが正しく動作する\n- [ ] Prettierによる自動フォーマットが動作する\n- [ ] VSCodeで推奨設定が適用される\n- [ ] Gitで不要なファイルが無視される\n- [ ] `pnpm run lint`でリントが実行される\n- [ ] `pnpm run format`でフォーマットが実行される\n\n## 技術仕様\n- TypeScript（strictモード）\n- ESLint（SvelteKit推奨設定）\n- Prettier（SvelteKit推奨設定）\n- EditorConfig\n\n## 参考資料\n- 設計書：`/doc/designs/phase-1/01_project-initialization.md`\n- 開発プロセス：`/doc/development.md`\nEOF\n)\" --label \"phase:1,type:feature,priority:medium\")",
      "Bash(/opt/homebrew/bin/gh issue create --title \"CIパイプライン構築\" --body \"$(cat <<'EOF'\n## 概要\nGitHub Actionsを使用して継続的インテグレーション（CI）パイプラインを構築します。\n\n## 背景\nコード品質を維持し、自動テストを実行するため、CIパイプラインが必要です。プルリクエスト時に自動的にテストとビルドを実行し、問題を早期に発見します。\n\n## タスク\n- [ ] 基本的なCIワークフローの作成（.github/workflows/ci.yml）\n- [ ] Playwrightテスト用ワークフローの作成（.github/workflows/playwright.yml）\n- [ ] Node.jsとpnpmのセットアップ\n- [ ] キャッシュの設定（依存関係のキャッシュ）\n- [ ] テスト結果のレポート設定\n- [ ] ビルド成功の確認\n- [ ] PR時の自動実行設定\n\n## 完了条件\n- [ ] PRを作成時にCIが自動実行される\n- [ ] テスト（unit、e2e）が実行される\n- [ ] ビルドが成功する\n- [ ] リントチェックが実行される\n- [ ] 型チェックが実行される\n- [ ] テスト結果がPRに表示される\n\n## 技術仕様\n- GitHub Actions\n- Node.js 20\n- pnpm 8\n- Ubuntu（最新版）\n\n## 参考資料\n- 設計書：`/doc/designs/phase-1/02_github-setup.md`\n- 品質保証：`/doc/design.md`のテスト戦略セクション\nEOF\n)\" --label \"phase:1,type:feature,priority:medium\")",
      "Bash(/opt/homebrew/bin/gh issue close 14 --comment \"This issue has already been completed.\")",
      "Bash(/opt/homebrew/bin/gh issue close 15 --comment \"This issue has already been completed.\")",
      "Bash(/opt/homebrew/bin/gh issue close 16 --comment \"This issue has already been completed.\")",
      "Bash(/opt/homebrew/bin/gh issue list --state all --limit 15)",
      "Bash(/opt/homebrew/bin/gh issue list --state closed --limit 10)",
      "Bash(# Close completed Phase 3 issues\n/opt/homebrew/bin/gh issue close 18 --comment \"✅ データベース設定が完了しました。Drizzle ORMとSQLiteの環境構築、スキーマ定義が完了しています。\"\n/opt/homebrew/bin/gh issue close 19 --comment \"✅ 認証機能の実装が完了しました。Auth.jsによる管理者認証システムが動作しています。\"\n/opt/homebrew/bin/gh issue close 20 --comment \"✅ 記事CRUD APIの実装が完了しました。記事の作成・読み取り・更新・削除が可能です。\"\n/opt/homebrew/bin/gh issue close 21 --comment \"✅ カテゴリ管理APIの実装が完了しました。カテゴリのCRUD操作が可能です。\")",
      "Bash(export:*)",
      "Bash(gh pr view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(pnpm run lint:*)",
      "Bash(npx eslint:*)",
      "Bash(pnpm run:*)",
      "Bash(git add:*)",
      "Bash(gh pr:*)",
      "Bash(gh label create:*)",
      "Bash(gh issue create:*)",
      "Bash(git checkout:*)",
      "Bash(gh issue view:*)",
      "Bash(pnpm exec playwright test:*)"
    ],
    "deny": []
  }
}